- hosts: all
  connection: httpapi
  tasks:
    - name: Find a default CA certificate
      cisco.ftdansible.ftd_configuration:
        operation: getInternalCACertificateList
        filters:
          name: NGFW-Default-InternalCA
        register_as: certificates

    - name: Setup an SSL policy
      cisco.ftdansible.ftd_configuration:
        operation: upsertSSLPolicy
        data:
          name: NGFW-Default-SSL-Policy
          defaultAction:
            policyAction: DO_NOT_DECRYPT
            eventLogAction: LOG_NONE
            syslogServer: null
            type: sslpolicydefaultaction
          decryptionCACertificate: "{{ certificates[0] }}"
          undecryptableActions:
            compressedSession: INHERIT_DEFAULT_ACTION
            decryptionErrors: BLOCK
            handShakeErrors: INHERIT_DEFAULT_ACTION
            sessionNotCached: INHERIT_DEFAULT_ACTION
            sslV2Session: INHERIT_DEFAULT_ACTION
            type: sslundecryptableactions
            unknownCipherSuite: INHERIT_DEFAULT_ACTION
            unsupportedCipherSuite: INHERIT_DEFAULT_ACTION
          type: sslpolicy
        register_as: ssl_policy

    - name: Find an intrustion policy
      cisco.ftdansible.ftd_configuration:
        operation: getIntrusionPolicyList
        register_as: intrusion_policies

    - name: Enable the SSL policy as a part of access policy
      cisco.ftdansible.ftd_configuration:
        operation: upsertAccessPolicy
        data:
          name: NGFW-Access-Policy
          defaultAction:
            action: PERMIT
            eventLogAction: LOG_NONE
            syslogServer: null
            intrusionPolicy:
              id: "{{ intrusion_policies[0].id }}"
              type: "{{ intrusion_policies[0].type }}"
            type: accessdefaultaction
          sslPolicy: "{{ ssl_policy }}"
          type: accesspolicy

    - name: Disable the SSL policy from access policy
      cisco.ftdansible.ftd_configuration:
        operation: upsertAccessPolicy
        data:
          name: NGFW-Access-Policy
          defaultAction:
            action: PERMIT
            eventLogAction: LOG_NONE
            syslogServer: null
            intrusionPolicy:
              id: "{{ intrusion_policies[0].id }}"
              type: "{{ intrusion_policies[0].type }}"
            type: accessdefaultaction
          sslPolicy: null
          type: accesspolicy
