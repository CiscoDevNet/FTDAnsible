- name: testing basic functionality
  block:
    - name: addNetworkObject should create a new network
      fdm_network_object:
        hostname: "{{ protocol }}://{{ ip_address }}:{{ port }}"
        access_token: '{{ access_token }}'
        refresh_token: '{{ refresh_token }}'
        operation: 'addNetworkObject'
        name: "ansible-test-network"
        description: "Ansible Integration tests in action"
        subType: "HOST"
        value: "192.22.22.24"
        type: "networkobject"
        register_as: "newNetworkObj"
      register: result

    - assert:
        that:
          - result.changed == true
          - newNetworkObj['name'] == "ansible-test-network"
          - newNetworkObj['subType'] == "HOST"

    - name: editNetworkObjectByName should update the existing network
      fdm_network_object:
        hostname: "{{ protocol }}://{{ ip_address }}:{{ port }}"
        access_token: '{{ access_token }}'
        refresh_token: '{{ refresh_token }}'
        operation: 'editNetworkObjectByName'
        name: "ansible-test-network"
        description: "Ansible Integration tests in action"
        subType: "NETWORK"
        value: "192.23.23.0/24"
        type: "networkobject"
        register_as: "updatedNetworkObj"
      register: result

    - assert:
        that:
          - result.changed == true
          - updatedNetworkObj['id'] == newNetworkObj['id']
          - updatedNetworkObj['subType'] == "NETWORK"
          - updatedNetworkObj['value'] == "192.23.23.0/24"

    - name: getNetworkObjectByName should find the existing network
      fdm_network_object:
        hostname: "{{ protocol }}://{{ ip_address }}:{{ port }}"
        access_token: '{{ access_token }}'
        refresh_token: '{{ refresh_token }}'
        operation: 'getNetworkObjectByName'
        name: "ansible-test-network"
        register_as: "fetchedNetworkObj"
      register: result

    - assert:
        that:
          - result.changed == true
          - fetchedNetworkObj['id'] == newNetworkObj['id']
          - fetchedNetworkObj['name'] == "ansible-test-network"

  always:
    - name: delete created test network
      fdm_network_object:
        hostname: "{{ protocol }}://{{ ip_address }}:{{ port }}"
        access_token: '{{ access_token }}'
        refresh_token: '{{ refresh_token }}'
        operation: 'deleteNetworkObjectByName'
        name: "ansible-test-network"
